# The following patch(es) are by pgaskin (geek1011)

Both page turn buttons go next:
  - Enabled: no
  - Description: Make both page turn buttons on the Forma go next in the reader.
  - ReplaceBytes:
      Base:          "ReadingView::keyPressEvent(QKeyEvent*)"
      Offset:        82
      FindInstBW:    {SymPLTTail: "ReadingView::prevPageWithTimer()"}
      ReplaceInstBW: {SymPLTTail: "ReadingView::nextPageWithTimer()"}

Both page turn sides go next:
  - Enabled: no
  - Description: Make both page turn sides go next in the reader.
  # In ReadingView::processTap(TapGesture*) where the page direction is checked:
  - BaseAddress:  {Sym: "ReadingView::processTap(TapGesture*)", Rel: 564}
  - ReplaceBytes: {Offset:  0, FindInstBLX: {SymPLT: "ReadingView::leftToRightPageProgressDirection() const"}, CheckOnly: true}
  # nop the branch for checking if left-to-right (so it always runs the swap of back/forward)
  - ReplaceBytes: {Offset:  4, FindH: 18 B9, ReplaceInstNOP: true}
  # where r3 = *(r7+0x18) (back) and r2 = *(r7+0x20) (forward), then they are stored in reverse,
  # instead of storing each one, just store forward (by changing the source register in the str
  # instruction)
  - ReplaceBytes: {Offset: 10, FindH: 3B 62, ReplaceH: 3A 62}
  # This patch could have also been done later on where the tap point is checked against different
  # QRects, but that's a lot more complicated due to the use of QHash s of pointers to functions.

Increase page navigation history:
  - Enabled: no
  - Description: Increases the number of dots marking navigation history on the scrubber.
  # Replace the immediate value for the cmp r1, #2 before the bgt to the inlined
  # QVector::removeFirst() (i.e. QVector::erase(start, start+1)):
  - BaseAddress: "BookmarkHistoryMixin::pushBookmark(Bookmark const&)"
  - ReplaceInt: {Offset: 24, Find: 2, Replace: 4} # note: you can set the replacement to whatever you want, but it MUST be > 1 or bad things will happen

Replace adobe page numbers toggle with invert screen:
  - Enabled: no
  - Description: |
      Replaces the adobe page numbers toggle in reading settings with an invert
      screen one. Due to recent firmware changes (since 18220, it is set by the
      kobo QPA during initialization), it will only take effect after a reboot.
      See https://github.com/pgaskin/NickelMenu/issues/111 for more information.
  # Settings page
  - BaseAddress:  "N3SettingsReadingView::N3SettingsReadingView(QWidget*)"
  - ReplaceBytes: {Offset: 884, FindInstBLX: {SymPLT: "ReadingSettings::getShowAdobePageNumbers()"},     ReplaceInstBLX: {SymPLT: "FeatureSettings::invertScreen()"}}
  # Settings page controller
  - BaseAddress:  {Sym: "N3SettingsReadingController::showAdobePageNumbersToggled()"}
  - ReplaceBytes: {Offset:  74, FindInstBLX: {SymPLT: "ReadingSettings::getShowAdobePageNumbers()"},     ReplaceInstBLX: {SymPLT: "FeatureSettings::invertScreen()"}}
  - ReplaceBytes: {Offset:  86, FindInstBLX: {SymPLT: "ReadingSettings::setShowAdobePageNumbers(bool)"}, ReplaceInstBLX: {SymPLT: "FeatureSettings::setInvertScreen(bool)"}}
  # Settings page text
  - FindReplaceString: {Find: "Show Adobe EPUB page numbers", Replace: "Invert screen"}

Always show confirmation dialog before upgrading:
  - Enabled: no
  - PatchGroup: Firmware upgrade options
  - Description: This patch makes the confirmation dialog always show before upgrading.
  - BaseAddress:  "UpgradeManager::requestUpgradeConfirmation(UpgradeType, QString const&)"
  - ReplaceBytes: {Offset: 22, FindH:       01 2C,                                  ReplaceH: A4 42}       # make the optional UpgradeType check always true (CMP r4, #1 -> CMP r4, r4)
  - ReplaceBytes: {Offset: 42, FindInstBLX: {SymPLT: "UpgradeManager::isSilent()"}, ReplaceH: 4F F0 00 00} # make the call to UpgradeManager::isSilent always false (MOV r0, #0)

Allow USB storage even when device locked:
  - Enabled: no
  - Description: |
      Always allows USB storage even when the device is locked. When combined
      with an enabled lock screen, this patch allows recovery from almost any
      segfaulting patch without a factory reset, as most code isn't executed
      until after the initial unlock. WARNING - this patches renders the lock
      screen security completely useless! But, for some security by obscurity
      this will only take effect when you plug it in while the sleep screen is
      visible.
  # Never reject the permission request (i.e. don't set *r5 = false), even when
  # the PIN entry dialog is enabled:
  - ReplaceBytes:
      Base: "N3PowerWorkflowManager::onUSBPlugPermissionRequest(PermissionRequest*)"
      Offset: 40
      FindH: 2B 70    # strb r3, [r5]
      ReplaceInstNOP: true

Hide browser from beta features:
  - Enabled: no
  - Description: Hides the built-in browser from beta features.
  - ReplaceBytes:
      Base:        "N3SettingsExtrasView::N3SettingsExtrasView(QWidget*)"
      Offset:      1530
      FindInstBLX: {SymPLT: "Device::isParentalControlEnabled() const"}
      ReplaceH:    4F F0 01 00
  - ReplaceBytes:
      Base:        {Sym: "SelectionMenuController::setupMainOptions()"}
      Offset:      194
      FindInstBLX: {SymPLT: "Device::isParentalControlEnabled() const"}
      ReplaceH:    4F F0 01 00

Remove beta features not supported text:
  - Enabled: no
  - Description: Does what it says to clear up the clutter.
  - ReplaceBytes:
      Base:           "Ui_N3SettingsExtrasView::retranslateUi(QWidget*)"
      Offset:         96
      FindInstBLX:    {SymPLT: "QLabel::setText(QString const&)"}
      ReplaceInstBLX: {SymPLT: "QWidget::hide()"}

Disable all tutorial dialogs:
  - Enabled: no
  - Description: |
      Removes the annoying tutorials (and recurring dialogs). Note - I may
      have missed a few of them. If I have, just open an issue on GitHub or
      PM me (geek1011) on MobileRead, and I'll fix it.
  # QVariant::toBool is called after getting the setting (of if it has/should
  # show) as a QVariant. I am replacing this method as opposed to replacing the
  # return value of the function because 1. A MOV instruction with an immediate
  # (fixed) value is 4 long (rather than 2) and 2. This is simpler to update as
  # I only need to update the function offset and the offset for each setting.
  - ReplaceBytes: {Base: "DialogSettings::firstPurchaseCreditJitShown()",         Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "DialogSettings::quickTurnDialogShown()",                Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "DialogSettings::returningReaderDialogShown()",          Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::koboLoveDialogShown()",            Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::quickTourWidgetShown()",           Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::overDriveFilterShown()",           Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::wifiReminderDialogShown()",        Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::readABookShown()",                 Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::borrowDialogShown()",              Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::quickTourShown()",                 Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::libraryFTEShown()",                Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::zoomFTEShown()",                   Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::welcomeShown()",                   Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::syncWarningDialogShown()",         Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::addedToMyWordsDialogShown()",      Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::longPressDialogShown()",           Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::swipeDialogShown()",               Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::syncReminderDialogShown()",        Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::eReaderBooksManagementFTEShown()", Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Base: "ApplicationSettings::libraryCuratedListsDialogShown()", Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}

Remove recommendations (row1col2) from home screen:
  - Enabled: no
  - Description: |
      By default, when there are less than 2 books open, a recommendations
      column shows in the top right of the home screen. This patch hides it.
  - ReplaceBytes:
      Base:           "HomePageView::configureTopRight(HomePageWidgets)"
      Offset:         48
      FindH:          58 B1 # never skip hiding the top-right widget
      ReplaceInstNOP: true

Rename new home screen footer:
  - Enabled: no
  # This patch happens use shared strings in most versions, and may cause unusual
  # replacements in other parts of the GUI (see https://github.com/pgaskin/kobopatch-patches/issues/34).
  # This isn't usually an issue (and changes between versions), but occasionally,
  # the keyboard uses a letter from one of these strings, and will type the letter
  # from the replacement.
  - FindReplaceString: {Find: "Find your next great read", Replace: "Find your next great read"}
  - FindReplaceString: {Find: "Find your next book in Kobo Plus or our store", Replace: "Find your next book in Kobo Plus or our store"}
  - ReplaceBytes:
      Base:          "HomePageView::setOverDriveUser(OverDriveUser const&)"
      Offset:         60
      FindInstBLX:    {SymPLT: "GenericHomeWidget::setTitleText(QString)"}
      ReplaceInstNOP: true
    # You can enable the following replacement, but note that it might cause the o letter on the keyboard to change
#  - FindReplaceString: {Find: "Shop Kobo", Replace: "9char-str"}

Remove line from bottom tab bar:
  - Enabled: no
  - Description: Removes the line from the top of the bottom tab bar added in 4.23.15505.
  # Instead of setting the minimum size of the QFrame for the line, hide it.
  - ReplaceBytes:
      Base:           "Ui_MainNavView::setupUi(QWidget*)"
      Offset:         866
      FindInstBLX:    {SymPLT: "QWidget::setMinimumSize(int, int)"}
      ReplaceInstBLX: {SymPLT: "QWidget::hide()"}

## Change Browse Kobo home screen link target ###
# This patch allows you to change the target of the Browse Kobo link. To
# rename the top description, use the rename home screen footer patch.
#
# The easy options for this patch are fairly limited, as BrowseKoboWidget::tapped
# just calls the superclass event, then the call to DiscoverNavMixin::storeFront
# in the PLT is tail-call optimized. This places a number of restrictions on the
# replacement target, namely: the branch must be a branch and exchange, but not
# link (lr must be unchanged to return correctly), which is implemented as a
# 32-bit branch to a bx pc (nop branch, but still switch instruction sets)
# immediately before a PLT entry to a nav mixin without any arguments (i.e.
# must be static). Note that the first branch is relative to pc. Also, note that
# in general, this requirement means anything called by StatusBarController (the
# menu) can be used as a replacement.
#
# Basically, the following two steps are needed:
# - In BrowseKoboWidget::tapped, change the tail-call to the bx before
#   [something]NavMixin::[something] in the PLT.
# - In the BrowseKoboWidget constructor, change which function is called to get
#   the bottom text (Shop Kobo) from N3DeviceCharm::shopName (Shop Kobo / Walmart)
#   to N3DeviceCharm::[something] (note that there isn't enough room to
#   load an entirely different string here).

Change Browse Kobo home screen link target - Activity:
  - Enabled: no
  - PatchGroup: Browse Kobo link target
  - Description: See the comment above.
  - ReplaceBytes:
      Base:          "BrowseKoboWidget::tapped()"
      Offset:        26
      FindInstBW:    {SymPLTTail: "DiscoverNavMixin::storefront()"}        # Store
      ReplaceInstBW: {SymPLTTail: "ReadingLifeNavMixin::chooseActivity()"} # Activity
  - ReplaceBytes:
      Base:          "BrowseKoboWidget::tapped()"
      Offset:        36
      FindInstBW:    {SymPLTTail: "StoreNavMixin::overDriveFeaturedLists()"} # OverDrive
      ReplaceInstBW: {SymPLTTail: "ReadingLifeNavMixin::chooseActivity()"}   # Activity
  - ReplaceBytes:
      Base:           "BrowseKoboWidget::BrowseKoboWidget(QWidget*)"
      Offset:         206
      FindInstBLX:    {SymPLT: "N3DeviceCharm::shopName()"}   # "Shop Kobo" or "Walmart"
      ReplaceInstBLX: {SymPLT: "N3DeviceCharm::extrasName()"} # "Activity"
  - ReplaceBytes:
      Base:          "HomePageView::setOverDriveUser(OverDriveUser const&)"
      Offset:         114
      FindInstBLX:    {SymPLT: "GenericHomeWidget::setMetaText(QString)"} # "OverDrive"
      ReplaceInstNOP: true

###

### Smartlink patches ###

Set visible SmartLink:
  - Enabled: no
  - PatchGroup: SmartLink
  - Description: Sets the currently visible smartlink (does not override priority messages).
  # SmartLinks: (name from SmartLinkWidget::getAnalyticsMessage)
  #  # - internal name   - default condition                                   - what                                                             - action
  # PRIORITY MESSAGES (shown first up to 3 times each): (SmartLinkWidget::showPriorityMessage, ActivityManager::smartLinkPriorityMessage, SmartLinkWidget::tapped)
  #  5 - ReleaseNotes    - whats new available from Activity                   - RELEASE NOTES: Find out what's new in this software update       - whats new (from Activity)
  #  6 - OverDriveFTE    - overdrive enabled && not signed in                  - OVERDRIVE: Learn how to borrow eBooks from your public library   - overdrive about
  #  7 - KoboPlusFTE     - kobo plus enabled && not subscribed                 - KOBO PLUS: Browse Kobo Plus books                                - kobo store -> kobo plus
  #  8 - OverDrive       - overdrive enabled && signed in && have hold         - OVERDRIVE: View your public library holds                        - overdrive holds list
  # ROTATION MESSAGES (randomly chosen): (SmartLinkWidget::showRotationMessage, ActivityManager::smartLinkGeneralMessage, SmartLinkWidget::tapped)
  #  1 - Pocket          - pocket not signed in                                - POCKET: Read articles from the web on your eReader                - pocket about
  #  2 - KoboPlus        - kobo plus enabled && not subscribed                 - KOBO PLUS: Upgrade to a Kobo Plus Read & Listen subscription      - kobo store -> kobo plus
  #  2 - KoboPlus        - kobo plus enabled && not subscribed                 - KOBO PLUS: Read as much as you want with a Kobo Plus subscription - kobo store -> kobo plus
  #  3 - Overdrive       - overdrive enabled && not signed in                  - OVERDRIVE: Borrow eBooks from your public library                 - overdrive about
  #  4 - Categories      - always                                              - CATEGORIES: Browse fiction, romance, biography and more           - kobo store -> categories
  #  9 - NaturalLight    - has light sensor && not viewed tutorial             - DEVICE NAME: Learn about the Natural Light feature                - rgb front light about
  # 10 - QuickTour       - quick tour not shown && quick turn tile not visible - GETTING STARTED: Get to know your %0                              - quick tour
  # 11 - ReadingTour     - read a book tour not showed                         - READING A BOOK: Get quick tips about reading on your eReader      - read a book tutorial
  # 12 - UserGuide       - user guide present && not opened                    - USER GUIDE: Read the user guide for your %0                       - read -> user guide
  # 13 - RelatedReads    - recent book available from Activity                 - RELATED READS: Discover books related to the ones you're reading  - browse -> similar books
  # 14 - Wishlist        - no wishlist items || something else                 - WISHLIST: Create a Wishlist of books you're interested in         - browse -> wishlist
  # 15 - ReadingSettings - reading settings not changed                        - READING SETTINGS: Customize the way you read a book               - settings -> reading settings
  # 16 - ReadingStats    - books finished > 0 && hours read rounded to .5 > 0  - READING STATS: You've finished %n books and read for %n hours     - reading life -> stats
  # 17 - SuperPoints     - participating in super points && points > 2400      - KOBO SUPER POINTS: You have %0 Super Points to redeem             - kobo store
  # 18 - PocketUser      - unread pocket articles > 0                          - POCKET: Catch up on the %n article(s) you added recently          - library -> pocket
  # 19 - Audiobooks      - supports audiobooks && audiobooks enabled           - AUDIOBOOKS: Get started with Audiobooks on your eReader           - kobo store -> audiobooks
  #
  - BaseAddress:  {Sym: "SmartLinkWidget::showRotationMessage(Device const&)", Rel: 20}
  - ReplaceBytes: {FindInstBLX: {SymPLT: "ActivityManager::smartLinkGeneralMessage(Device const&)"}, ReplaceH: 4F F0 04 00} # MOV.W r0, #4
  # set the new SmartLink to show (you can set this to your preference based on
  # the list above, but it MUST be one of the above options, or you may need
  # to factory reset):
  - ReplaceInt:   {Offset: 2, Find: 4, Replace: 4}

Only show Pocket SmartLink:
  - Enabled: no
  - PatchGroup: SmartLink
  - Description: Only show the Pocket SmartLink on the home screen.
  - ReplaceBytes:
      Base:        "SmartLinkWidget::showRotationMessage(Device const&)"
      Offset:      20
      FindInstBLX: {SymPLT: "ActivityManager::smartLinkGeneralMessage(Device const&)"}
      ReplaceH:    4F F0 12 00
  # replace the text (choose one, or remove both):
  - FindReplaceString: {Find: "Catch up on the %n article(s) you added recently", Replace: "My Articles"}
# - FindReplaceString: {Find: "Catch up on the %n article(s) you added recently", Replace: "My Articles (%n unread)"}

Only show stats SmartLink:
  - Enabled: no
  - PatchGroup: SmartLink
  - Description: Only show the stats SmartLink on the home screen.
  - ReplaceBytes:
      Base:        "SmartLinkWidget::showRotationMessage(Device const&)"
      Offset:      20
      FindInstBLX: {SymPLT: "ActivityManager::smartLinkGeneralMessage(Device const&)"}
      ReplaceH:    4F F0 10 00

Never show Kobo Plus, wishlist, and points SmartLinks:
  - Enabled: no
  - PatchGroup: SmartLink
  - Description: Removes Kobo Plus, wishlist, and points SmartLinks from the rotation.
  - BaseAddress: "ActivityManager::smartLinkGeneralMessage(Device const&)"
  # NOP Kobo Plus (2):
  - ReplaceBytes: {Offset: 310, FindH: 02 23, CheckOnly: true} # MOVS r3, #2
  - ReplaceBytes: {Offset: 320, FindInstBLX: {SymPLT: "QVector<SmartLinkType>::append(SmartLinkType const&)"}, ReplaceInstNOP: true}
  # NOP wishlist (14):
  - ReplaceBytes: {Offset: 284, FindH: 0E 23, CheckOnly: true} # MOVS r3, #14
  - ReplaceBytes: {Offset: 294, FindInstBLX: {SymPLT: "QVector<SmartLinkType>::append(SmartLinkType const&)"}, ReplaceInstNOP: true}
  # NOP super points (17):
  - ReplaceBytes: {Offset: 1514, FindH: 11 23, CheckOnly: true} # MOVS r3, #17
  - ReplaceBytes: {Offset: 1526, FindInstBLX: {SymPLT: "QVector<SmartLinkType>::append(SmartLinkType const&)"}, ReplaceInstNOP: true}

###

# Note: The "Increase TOC level indentation" and "Increase TOC level indentation
# and fix extra indentation bug" patches are not necessary anymore in firmware
# 4.24.15672+ and have been removed since the fixes have been integrated into
# the original firmware. The default indentation is now around 3x larger than it
# was before (and it scales for each device), and the firmware will always
# subtract 1 from the depth before applying the indentation (since it's indexed
# from 1+ rather than 0+).
#
# If you are not happy with the new defaults, see the new "Change TOC level
# indentation" patch in nickel.yaml.

Allow showing info panel on random screensaver:
  - Enabled: no
  - Description: |
      See https://www.mobileread.com/forums/showthread.php?t=321609. This patch
      allows showing the info panel even when using a random screensaver image
      from .kobo/screensaver (note that full-screen covers needs to be enabled
      for the screensaver to show).
  - ReplaceBytes:
      Base: "PowerViewController::updateCover()"
      Offset: 252
      FindInstBLX: {SymPLT: "BookCoverDragonPowerView::setInfoPanelVisible(bool)"}
      ReplaceInstNOP: true

Remove title from reading header/footer:
  - Enabled: no
  - Description: Removes the chapter/book title from the new reading header/footer.
  # In the longest form of ReadingFooter::update (the others are wrappers with
  # the args being set to the current value), the first one is the title. The
  # final string is created by starting with the title, then appending the "-",
  # then the page number / percentage / etc text.
  #
  # This one is slightly unusual in that the reading header also shares the
  # ReadingFooter code (ReadingView::updateProgressHeader only has the page
  # text, and it ends with a branch to ReadingFooter::update). This means we
  # only have to patch one place, but it also means you can't have the title in
  # one, but not the other.
  #
  # We'll patch this in a slightly hacky and inefficient, but simple and
  # easy-to-update way by replacing the first QString::append (the dash) with a
  # QString::resize to zero (I would have done a QString::clear, but that symbol
  # isn't imported):
  - BaseAddress:  {Sym: "ReadingFooter::update(QString const&, QString const&, QString const&, bool)", Rel: 190}
  - ReplaceBytes: {Offset: 0, FindH: 49 46, ReplaceH: 00 21} # replace MOV r1, sb with MOV r1, #0 (the MOV doesn't matter, but may to be updated to match, ensuring nothing after depends on it)
  - ReplaceBytes: {Offset: 4, FindInstBLX: {SymPLT: "QString::append(QString const&)"}, ReplaceInstBLX: {SymPLT: "QString::resize(int)"}}

# Prevent Kobo from scanning dotfiles/folders (since 4.17.13651): See https://www.mobileread.com/forums/showthread.php?t=323083.

Larger Sleep/Power-off timeouts:
  - Enabled: no
  - PatchGroup: Sleep/Power-off timeouts
  - Description: |
      Increase the available sleep/power-off timeouts to larger values (up to a
      few weeks). To customize this patch, see https://pgaskin.net/kobopatch-patches/lgrpwroff-21533.html .

      IMPORTANT - Although this patch has been tested by multiple users and
      confirmed to be working, the interaction between the RTC timer and Nickel
      has many moving parts. As reported by JSWolf on MR, this patch might have
      issues with actually powering-off with timeouts longer than a day. The
      cause is likely to be the auto-sync interval or sleepcover causing the
      timer to be overridden/reset every day. Nevertheless, this patch should
      work reliably for timeouts under 12 hours, and probably under 1 day.

      If you are using this patch with timeouts above 12 hours, and can confirm
      if it works/doesn't work, please PM me or comment on GitHub with your
      setting values, sleepcover or not, auto-sync interval, wifi on/off, firmware
      version, and Kobo model.

      See https://github.com/pgaskin/kobopatch-patches/issues/28#issuecomment-537161827
      for more details about this.
  # Multipliers
  - ReplaceBytes:
      Base: "N3PowerWorkflowManager::configureWakeup(AlarmControl*, int, AlarmControlDelegate*)"
      Offset: 28
      FindH: 03 FB 04 F2    # MUL r2(dest), r3(multiplier), r4(mins)
      ReplaceH: 4F EA C4 42 # LSL r2, r4, #19
  - ReplaceBytes: {Base: "N3PowerWorkflowManager::pollBattery()", Offset: 106, FindH: 08 FB 00 F8, ReplaceH: 4F EA C0 48} # MUL r8(dest), r8(multiplier), r0(mins) -> LSL r8, r0, #19
  - ReplaceBytes: {Base: "N3PowerWorkflowManager::pollBattery()", Offset: 156, FindH: 02 FB 00 F2, ReplaceH: 4F EA C0 42} # MUL r2(dest), r2(multiplier), r0(mins) -> LSL r2, r0, #19
  # Menu text
  - FindBaseAddressString: "5 mins\0"
  - ReplaceString: {Offset:  0, Find: "5 mins\0", Replace: "8m"}
  - ReplaceString: {Offset:  8, Find: "10 mins",  Replace: "34m"}
  - ReplaceString: {Offset: 16, Find: "15 mins",  Replace: "1h1m"}
  - ReplaceString: {Offset: 24, Find: "30 mins",  Replace: "4h4m"}
  - ReplaceString: {Offset: 32, Find: "45 mins",  Replace: "12h5m"}
  - ReplaceString: {Offset: 38, Find: "60 mins",  Replace: "24h1m"}
  # Values (see https://www.mobileread.com/forums/showpost.php?p=3887105)
  - BaseAddress: "N3SettingsPowerView::initChoices()"
  - ReplaceInt: {Offset:  56, Find:  5, Replace:   1}
  - ReplaceInt: {Offset: 118, Find: 10, Replace:   4}
  - ReplaceInt: {Offset: 180, Find: 15, Replace:   7}
  - ReplaceInt: {Offset: 240, Find: 30, Replace:  28}
  - ReplaceInt: {Offset: 300, Find: 45, Replace:  83}
  - ReplaceInt: {Offset: 360, Find: 60, Replace: 165}

Allow rotation on all devices:
  - Enabled: no
  - Description: |
      Enables rotation on all devices. This shows a rotation icon in the status
      bar, which shows a menu allowing you to choose between portrait and landscape
      when pressed. This icon is only shown on rotatable views (like the reader).
      Unlike only the DeveloperSettings ForceAllowLandscape option, this patch
      also makes the rotation icon show on the new reader as well.
  # Always return true for ForceAllowLandscape:
  - ReplaceBytes: {Base: "DevSettings::forceAllowLandscape()", Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}
  # In ReadingMenuView::ReadingMenuView, replace the value of Device::hasOrientationSensor,
  # which is passed to a function to hide/show the rotate icon:
  - ReplaceBytes: {Base: "ReadingMenuView::updateReadingMenu()", Offset: 238, FindInstBLX: {SymPLT: "Device::hasOrientationSensor() const"}, ReplaceH: 4F F0 01 00}
  # Also fix sizing of popup by doing the same in RotatePopup::RotatePopup, but
  # note that this will make the Automatic option show too (and do nothing):
  - ReplaceBytes: {Base: "RotatePopup::RotatePopup(QWidget*)", Offset: 190, FindInstBLX: {SymPLT: "Device::hasOrientationSensor() const"}, ReplaceH: 4F F0 01 00}


Don't uppercase header/footer text:
  - Enabled: no
  - Description: Prevents the text in the reader header/footer from being uppercased.
  - PatchGroup: Header/footer page number text
  # Replace QString::toUpper call with QString::trimmed (to copy the string, and
  # not need to add a mov instruction and NOP the destructor):
  - ReplaceBytes:
      Base:            "ReadingView::getChapterTitle()"
      Offset:          298
      FindInstBLX:     {SymPLT: "QString::toUpper() const"}
      ReplaceInstBLX:  {SymPLT: "QString::trimmed() const"}
  - ReplaceBytes:
      Base:            "ReadingView::updateFooter()"
      Offset:          26
      FindInstBLX:     {SymPLT: "QString::toUpper() const"}
      ReplaceInstBLX:  {SymPLT: "QString::trimmed() const"}
  # Page number text:
  - FindReplaceString: {Find: "%1 OF %2", Replace: "%1 of %2"}
  # Percent read text (this string is only used by ReadingView::getChapterPercentProgressText,
  # and the home screen one is already lowercase):
  - FindReplaceString: {Find: "%1% READ", Replace: "%1% read"}

Custom header/footer page number text:
  - Enabled: no
  - PatchGroup: Header/footer page number text
  - Description: Changes the page number text format in the reading header & footer
  - FindReplaceString: {Find: "%1 OF %2", Replace: "%1 / %2"}

Don't uppercase header/footer text and change page number text:
  - Enabled: no
  - Description: Combines the previous two patches.
  - PatchGroup: Header/footer page number text
  - ReplaceBytes:
      Base:            "ReadingView::getChapterTitle()"
      Offset:          298
      FindInstBLX:     {SymPLT: "QString::toUpper() const"}
      ReplaceInstBLX:  {SymPLT: "QString::trimmed() const"}
  - ReplaceBytes:
      Base:            "ReadingView::updateFooter()"
      Offset:          26
      FindInstBLX:     {SymPLT: "QString::toUpper() const"}
      ReplaceInstBLX:  {SymPLT: "QString::trimmed() const"}
  - FindReplaceString: {Find: "%1 OF %2", Replace: "%1 / %2"}
  - FindReplaceString: {Find: "%1% READ", Replace: "%1% read"}

Swap reading header/footer:
  - Enabled: no
  - Description: |
      Swaps the reading header/footer text (i.e. book progress on top, chapter
      progress on the bottom). This patch has undefined behaviour if the header
      or footer is disabled.
  # Both the header and footer use the ReadingFooter class and update them using
  # the overloaded ReadingFooter::update function. The difference is which r0 (this)
  # is passed to them. Since tbe header and footer are both members of ReadingView,
  # and they are loaded just before the update (and aren't used otherwise), they
  # can be swapped by switching the struct offset used by LDR.
  #
  # Offsets (since 4.19.14123):
  #  - ReadingView->header - 0x10
  #  - ReadingView->footer - 0x1C
  - ReplaceBytes:
      Base:     "ReadingView::updateProgressHeader(QString const&, QString const&)"
      Offset:   8
      FindH:    00 69 # LDR r0, [r0, #0x10]
      ReplaceH: C0 69 # LDR r0, [r0, #0x1C]
  - ReplaceBytes:
      Base:     "ReadingView::updatePercentageFooter(QString const&)"
      Offset:   182
      FindH:    C0 69 # LDR r0, [r0, #0x1C]
      ReplaceH: 00 69 # LDR r0, [r0, #0x10]
  - ReplaceBytes:
      Base:     "ReadingView::updatePercentageFooter(QString const&)"
      Offset:   296
      FindH:    C0 69 # LDR r0, [r0, #0x1C]
      ReplaceH: 00 69 # LDR r0, [r0, #0x10]
  - ReplaceBytes:
      Base:     "ReadingView::updatePageFooter(QString const&)"
      Offset:   172
      FindH:    C0 69 # LDR r0, [r0, #0x1C]
      ReplaceH: 00 69 # LDR r0, [r0, #0x10]
  - ReplaceBytes:
      Base:     "ReadingView::updateTimeFooter(QString const&)"
      Offset:   50 # "Loading..."
      FindH:    E4 69 # LDR r4, [r4, #0x1C]
      ReplaceH: 24 69 # LDR r4, [r4, #0x10]
  - ReplaceBytes:
      Base:     "ReadingView::updateTimeFooter(QString const&)"
      Offset:   102 # time estimate
      FindH:    D3 F8 1C 90 # LDR.W sb, [r3, #0x1C]
      ReplaceH: D3 F8 10 90 # LDR.W sb, [r3, #0x10]
  - ReplaceBytes:
      Base:     "ReadingView::updateTimeFooter(QString const&)"
      Offset:   240 # pages
      FindH:    DE F8 1C 40 # LDR.W r4, [lr, #0x1C]
      ReplaceH: DE F8 10 40 # LDR.W r4, [lr, #0x10]

# Note: The "Enable advanced settings for all fonts" patch is no longer
# necessary since the advanced font settings are now available for all fonts.

# TODO(geek1011): Customize ComfortLight settings
Customize ComfortLight settings:
  - Enabled: no
  - Description: |
      Change the times available in the ComfortLight bedtime dropdown and the
      start/end times for the color changes. All values in this patch are
      customizable.

      The default values for this patch give you 21 options between 5PM and 3AM
      at 30 minute intervals, with the colour change starting at 4PM, and the
      change back to blue between 5AM and 7AM. The firmware default is 13 options
      between 9PM-3AM at 30 minute intervals, with the transition starting at 6PM.
  ##
  # In an unnamed subroutine two layers into FrontLightPopupController::loadView
  # (find it by going back from QTime::addSecs), the times for the dropdown are
  # generated into a QVector<QPair<QString, QTime>> with a simple loop.
  - BaseAddress: 0xE9841c # find the base of the unnamed subroutine with the x-ref to _ZN5QTimeC1Eiiii
  #
  # Change the initial hour / first bedtime dropdown item passed to the QTime
  # constructor (mov r1, #21):
  - ReplaceInt: {Offset: 22, Find: 21, Replace: 17} # 21:00 (9PM) -> 17:00 (5PM)
  #
  # Optional: Change the increment passed to QTime::addSecs (you need to use an
  # ARM assembler to change this value):
  - ReplaceBytes: {Offset: 122, FindH: 4F F4 E1 61, ReplaceH: 4F F4 E1 61} # mov.w r1, #1800: 30m
  #
  # Change the number of increments / bedtime dropdown options (start at the
  # initial time, add this number -1 more items with the above increment each
  # time) (movs r5, #13):
  - ReplaceInt: {Offset: 78, Find: 13, Replace: 21} # 13 [9PM..3AM]+30m -> 21 [5PM..3AM]+30m
  #
  # Change the number of pre-allocated elements (I don't think this is actually
  # required, as Qt will realloc as necessary, but we might as well do this just
  # in case) (mov r1, #21):
  - ReplaceInt: {Offset: 696, Find: 13, Replace: 21} # same as prev replacement
  ##
  # The actual color adjustment is done in BedtimeManager::adjustTemperature.
  # The color temperature is based on the current time, the bedtime, the hardcoded
  # sunset, the hardcoded sunrise start, the hardcoded sunrise end, the daytime
  # temperature, and the nighttime temperature.
  - BaseAddress: "BedtimeManager::adjustTemperature()"
  #
  # Change the sunset time (the transition to a warmer temperature starts here
  # and transitions until the bedtime chosen) (this should be 1-3 hours before
  # the minimum bedtime from the first replacement above) (mov r1, #18):
  - ReplaceInt: {Offset: 228, Find: 18, Replace: 16} # 18:00 (9PM-3=6PM) -> 16:00 (5PM-1=4PM)
  #
  # Change the time for the sunset timer to fire at (this is passed to a QTime
  # constructor which is passed to PowerTime::fireAt) (mov r1, #18):
  - ReplaceInt: {Offset: 508, Find: 18, Replace: 16} # should match the sunset time above
  #
  # Optional: Change the sunrise start time (the transition back to a cooler
  # temperature starts here) (this should be sometime after the last bedtime,
  # but before the sunset time) (mov r1, #5):
  - ReplaceInt: {Offset: 262, Find: 5, Replace: 5} # 5AM
  #
  # Optional: Change the sunrise end time (the transition back to a cooler
  # temperature ends here) (this should be 1-3 hours after the sunrise start but
  # before the sunset time or bad things will happen with negative values) (mov r1, #7):
  - ReplaceInt: {Offset: 208, Find: 7, Replace: 7} # 5AM+2=7AM

# The following patches allow you to enable a config file option with a patch.

FeatureSettings - BookSpecificStats:
  - Enabled: no
  - Description: Adds an option to view stats for a specific book to the book menu.
  - ReplaceBytes: {Base: "FeatureSettings::bookSpecificStatsEnabled()", Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}

FeatureSettings - ShowFacebookShare:
  - Enabled: no
  - Description: Re-enables the Facebook share option in menus.
  - ReplaceBytes: {Base: "FeatureSettings::showFacebookShare()", Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}

FeatureSettings - FullScreenBrowser:
  - Enabled: no
  - Description: Makes the browser fullscreen (note that there is no way out except for rebooting).
  - ReplaceBytes: {Base: "FeatureSettings::fullScreenBrowser()", Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}

FeatureSettings - MyWords:
  - Enabled: no
  - Description: Enables the My Words tab of the Activity screen.
  - ReplaceBytes: {Base: "FeatureSettings::myWords()", Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}

FeatureSettings - ExportHighlights:
  - Enabled: no
  - Description: Add an option to export highlights to the book menu.
  - ReplaceBytes: {Base: "FeatureSettings::exportHighlightsEnabled()", Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}

DeveloperSettings - AutoUsbGadget:
  - Enabled: no
  - Description: Automatically enable USB Storage mode when connected.
  - ReplaceBytes: {Base: "DevSettings::autoUsbGadget()", Offset: 54, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00}

PowerSettings - UnlockEnabled:
  - Enabled: no
  - Description: Disables/enables the slide to unlock feature.
  - ReplaceBytes: {Base: "PowerSettings::getUnlockEnabled()", Offset: 120, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 00 00} # disable
# - ReplaceBytes: {Base: "PowerSettings::getUnlockEnabled()", Offset: 120, FindInstBLX: {SymPLT: "QVariant::toBool() const"}, ReplaceH: 4F F0 01 00} # enable
